name: Perform Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  laravel-tests:
    name: 'ðŸ”¥ Perform Pest Tests'
    runs-on: ubuntu-latest

    services:

      # MYSQL Service
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: inertia_db_test
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: root
          MYSQL_PASSWORD: root
          MYSQL_USER: user

        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      # Redis Service
      redis:
        image: redis
        # Its really important here to map the port
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

      # Checkout the code
      - uses: actions/checkout@v2

      # Setup PHP
      - name: Setup PHP & Extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0.7
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, php-redis
          coverage: none
          ini-values: post_max_size=500M, max_execution_time=180, memory_limit = -1

      # Copy the Enviorment file
      - name: Copy .env.testing to .env
        run: php -r "file_exists('.env') || copy('.env.github-actions', '.env');"

      # Cache Composer Dependencies
      - name: Cache Composer Dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}

      # Cache Composer Dependencies
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-


      # Install Composer sht.
      - name: Install Dependencies
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
        run: |
          composer install --prefer-dist --no-interaction

      # Generate app key
      - name: Generate + Cache + Migrate + Permissions
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
        run: |
          php artisan key:generate
          chmod -R 777 storage bootstrap/cache

      # Using Lasso to publish the assets
      - name: Pulling from laso
        run: php artisan lasso:pull

      # Runs Unit Tests
      - name: Unit & Features Test with PEST
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
        run: vendor/bin/pest
